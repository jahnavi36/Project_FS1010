{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jahna\\\\Desktop\\\\final\\\\my-app\\\\src\\\\components\\\\contact.js\";\nimport React, { Component } from 'react';\n/*class Contact extends Component {\r\n userData;\r\n\n constructor(props) {\r\n     super(props);\r\n\n     this.onChangeName = this.onChangeName.bind(this);\r\n     this.onChangeEmail = this.onChangeEmail.bind(this);\r\n     this.onChangePhone = this.onChangePhone.bind(this);\r\n     this.onSubmit = this.onSubmit.bind(this);\r\n\n     this.state = {\r\n         name: '',\r\n         email: '',\r\n         phone: ''\r\n     }\r\n }\r\n\n\r\n // Form Values\r\n onChangeName(e) {\r\n     this.setState({ name: e.target.value })\r\n }\r\n\n onChangeEmail(e) {\r\n     this.setState({ email: e.target.value })\r\n }\r\n\n onChangePhone(e) {\r\n     this.setState({ phone: e.target.value })\r\n }\r\n\n\n // React Life Cycle\r\n componentDidMount() {\r\n     this.userData = JSON.parse(localStorage.getItem('user'));\r\n\n     if (localStorage.getItem('user')) {\r\n         this.setState({\r\n             name: this.userData.name,\r\n             email: this.userData.email,\r\n             phone: this.userData.phone\r\n         })\r\n     } else {\r\n         this.setState({\r\n             name: '',\r\n             email: '',\r\n             phone: ''\r\n         })\r\n     }\r\n }\r\n\n componentWillUpdate(nextProps, nextState) {\r\n     localStorage.setItem('user', JSON.stringify(nextState));\r\n }\r\n\n onSubmit(e) {\r\n     e.preventDefault()\r\n     console.log(this.state.props)\r\n }\r\n\n\n render() {\r\n     return (\r\n         <div className=\"contact-container\">\r\n           <h4>Get In Touch</h4>\r\n             <form onSubmit={this.onSubmit}>\r\n                 <div className=\"form-group\">\r\n                     <label>Name</label>\r\n                     <input type=\"text\" className=\"form-control\" value={this.state.name} onChange={this.onChangeName} />\r\n                 </div>\r\n                 <div className=\"form-group\">\r\n                     <label>Email</label>\r\n                     <input type=\"email\" className=\"form-control\" value={this.state.email} onChange={this.onChangeEmail} />\r\n                 </div>\r\n                 <div className=\"form-group\">\r\n                     <label>Phone</label>\r\n                     <input type=\"tel\" className=\"form-control\" value={this.state.phone} onChange={this.onChangePhone} />\r\n                 </div>\r\n                 <button type=\"submit\" className=\"btn btn-primary btn-block\">Submit</button>\r\n             </form>\r\n         </div>\r\n     )\r\n }\r\n}\r\n\nexport default Contact; */\n\nclass Contact extends Component {\n  constructor() {\n    super();\n    this.state = {\n      fields: {},\n      errors: {}\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.submituserContactForm = this.submituserContactForm.bind(this);\n  }\n\n  handleChange(e) {\n    let fields = this.state.fields;\n    fields[e.target.name] = e.target.value;\n    this.setState({\n      fields\n    });\n  }\n\n  submituserContactForm(e) {\n    e.preventDefault();\n\n    if (this.validateForm()) {\n      let fields = {};\n      fields[\"username\"] = \"\";\n      fields[\"emailid\"] = \"\";\n      fields[\"mobileno\"] = \"\";\n      this.setState({\n        fields: fields\n      });\n      alert(\"Form submitted\");\n    }\n  }\n\n  validateForm() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n\n    if (!fields[\"username\"]) {\n      formIsValid = false;\n      errors[\"username\"] = \"*Please enter your username.\";\n    }\n\n    if (typeof fields[\"username\"] !== \"undefined\") {\n      if (!fields[\"username\"].match(/^[a-zA-Z ]*$/)) {\n        formIsValid = false;\n        errors[\"username\"] = \"*Please enter alphabet characters only.\";\n      }\n    }\n\n    if (!fields[\"emailid\"]) {\n      formIsValid = false;\n      errors[\"emailid\"] = \"*Please enter your email-ID.\";\n    }\n\n    if (typeof fields[\"emailid\"] !== \"undefined\") {\n      //regular expression for email validation\n      var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n\n      if (!pattern.test(fields[\"emailid\"])) {\n        formIsValid = false;\n        errors[\"emailid\"] = \"*Please enter valid email-ID.\";\n      }\n    }\n\n    if (!fields[\"mobileno\"]) {\n      formIsValid = false;\n      errors[\"mobileno\"] = \"*Please enter your mobile no.\";\n    }\n\n    if (typeof fields[\"mobileno\"] !== \"undefined\") {\n      if (!fields[\"mobileno\"].match(/^[0-9]{10}$/)) {\n        formIsValid = false;\n        errors[\"mobileno\"] = \"*Please enter valid mobile no.\";\n      }\n    }\n\n    this.setState({\n      errors: errors\n    });\n    return formIsValid;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"main-contact-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"contactform\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 10\n      }\n    }, \"Get In Touch\"), /*#__PURE__*/React.createElement(\"form\", {\n      method: \"post\",\n      name: \"contact form\",\n      onSubmit: this.submitusercontactForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      value: this.state.fields.username,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"errorMsg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }\n    }, this.state.errors.username), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }\n    }, \"Email ID:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"emailid\",\n      value: this.state.fields.emailid,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"errorMsg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }\n    }, this.state.errors.emailid), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }\n    }, \"Mobile No:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"mobileno\",\n      value: this.state.fields.mobileno,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"errorMsg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }\n    }, this.state.errors.mobileno), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"button\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }\n    }))));\n  }\n\n}\n\nexport default Contact;","map":{"version":3,"sources":["C:/Users/jahna/Desktop/final/my-app/src/components/contact.js"],"names":["React","Component","Contact","constructor","state","fields","errors","handleChange","bind","submituserContactForm","e","target","name","value","setState","preventDefault","validateForm","alert","formIsValid","match","pattern","RegExp","test","render","submitusercontactForm","username","emailid","mobileno"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\r\n\r\n\r\n\r\n /*class Contact extends Component {\r\n  userData;\r\n\r\n  constructor(props) {\r\n      super(props);\r\n\r\n      this.onChangeName = this.onChangeName.bind(this);\r\n      this.onChangeEmail = this.onChangeEmail.bind(this);\r\n      this.onChangePhone = this.onChangePhone.bind(this);\r\n      this.onSubmit = this.onSubmit.bind(this);\r\n\r\n      this.state = {\r\n          name: '',\r\n          email: '',\r\n          phone: ''\r\n      }\r\n  }\r\n\r\n \r\n  // Form Values\r\n  onChangeName(e) {\r\n      this.setState({ name: e.target.value })\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n      this.setState({ email: e.target.value })\r\n  }\r\n\r\n  onChangePhone(e) {\r\n      this.setState({ phone: e.target.value })\r\n  }\r\n\r\n\r\n  // React Life Cycle\r\n  componentDidMount() {\r\n      this.userData = JSON.parse(localStorage.getItem('user'));\r\n\r\n      if (localStorage.getItem('user')) {\r\n          this.setState({\r\n              name: this.userData.name,\r\n              email: this.userData.email,\r\n              phone: this.userData.phone\r\n          })\r\n      } else {\r\n          this.setState({\r\n              name: '',\r\n              email: '',\r\n              phone: ''\r\n          })\r\n      }\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n      localStorage.setItem('user', JSON.stringify(nextState));\r\n  }\r\n\r\n  onSubmit(e) {\r\n      e.preventDefault()\r\n      console.log(this.state.props)\r\n  }\r\n\r\n\r\n  render() {\r\n      return (\r\n          <div className=\"contact-container\">\r\n            <h4>Get In Touch</h4>\r\n              <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                      <label>Name</label>\r\n                      <input type=\"text\" className=\"form-control\" value={this.state.name} onChange={this.onChangeName} />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                      <label>Email</label>\r\n                      <input type=\"email\" className=\"form-control\" value={this.state.email} onChange={this.onChangeEmail} />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                      <label>Phone</label>\r\n                      <input type=\"tel\" className=\"form-control\" value={this.state.phone} onChange={this.onChangePhone} />\r\n                  </div>\r\n                  <button type=\"submit\" className=\"btn btn-primary btn-block\">Submit</button>\r\n              </form>\r\n          </div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default Contact; */\r\n class Contact extends Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        fields: {},\r\n        errors:{}\r\n      }\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.submituserContactForm = this.submituserContactForm.bind(this);\r\n    };\r\n  \r\n    handleChange(e) {\r\n        let fields = this.state.fields;\r\n        fields[e.target.name] = e.target.value;\r\n        this.setState({\r\n          fields\r\n        });\r\n  \r\n      }\r\n\r\n      submituserContactForm(e) {\r\n        e.preventDefault();\r\n        if (this.validateForm()) {\r\n            let fields = {};\r\n            fields[\"username\"] = \"\";\r\n            fields[\"emailid\"] = \"\";\r\n            fields[\"mobileno\"] = \"\";\r\n            \r\n            this.setState({fields:fields});\r\n            alert(\"Form submitted\");\r\n        }\r\n  \r\n      }\r\n\r\n      validateForm() {\r\n\r\n        let fields = this.state.fields;\r\n        let errors = {};\r\n        let formIsValid = true;\r\n  \r\n        if (!fields[\"username\"]) {\r\n          formIsValid = false;\r\n          errors[\"username\"] = \"*Please enter your username.\";\r\n        }\r\n  \r\n        if (typeof fields[\"username\"] !== \"undefined\") {\r\n          if (!fields[\"username\"].match(/^[a-zA-Z ]*$/)) {\r\n            formIsValid = false;\r\n            errors[\"username\"] = \"*Please enter alphabet characters only.\";\r\n          }\r\n        }\r\n        if (!fields[\"emailid\"]) {\r\n            formIsValid = false;\r\n            errors[\"emailid\"] = \"*Please enter your email-ID.\";\r\n          }\r\n    \r\n          if (typeof fields[\"emailid\"] !== \"undefined\") {\r\n            //regular expression for email validation\r\n            var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n            if (!pattern.test(fields[\"emailid\"])) {\r\n              formIsValid = false;\r\n              errors[\"emailid\"] = \"*Please enter valid email-ID.\";\r\n            }\r\n          }\r\n    \r\n          if (!fields[\"mobileno\"]) {\r\n            formIsValid = false;\r\n            errors[\"mobileno\"] = \"*Please enter your mobile no.\";\r\n          }\r\n    \r\n          if (typeof fields[\"mobileno\"] !== \"undefined\") {\r\n            if (!fields[\"mobileno\"].match(/^[0-9]{10}$/)) {\r\n              formIsValid = false;\r\n              errors[\"mobileno\"] = \"*Please enter valid mobile no.\";\r\n            }\r\n          }\r\n    \r\n         \r\n    \r\n          this.setState({\r\n            errors: errors\r\n          });\r\n          return formIsValid;\r\n    \r\n    \r\n        }\r\n    \r\n    \r\n  render() {\r\n   return(\r\n     <div id=\"main-contact-container\">\r\n         <div id =\"contactform\">\r\n         <h4>Get In Touch</h4>\r\n         <form method=\"post\"  name=\"contact form\"  onSubmit= {this.submitusercontactForm} >\r\n        <label>Name</label>\r\n        <input type=\"text\" name=\"username\" value={this.state.fields.username} onChange={this.handleChange} />\r\n        <div className=\"errorMsg\">{this.state.errors.username}</div>\r\n        <label>Email ID:</label>\r\n        <input type=\"text\" name=\"emailid\" value={this.state.fields.emailid} onChange={this.handleChange}  />\r\n        <div className=\"errorMsg\">{this.state.errors.emailid}</div>\r\n        <label>Mobile No:</label>\r\n        <input type=\"text\" name=\"mobileno\" value={this.state.fields.mobileno} onChange={this.handleChange}   />\r\n        <div className=\"errorMsg\">{this.state.errors.mobileno}</div>\r\n        <input type=\"submit\" className=\"button\"  value=\"Submit\"/>\r\n        </form>\r\n    </div>\r\n</div>\r\n\r\n      );\r\n  }\r\n }\r\nexport default Contact ;     \r\n      \r\n      \r\n      \r\n      \r\n    "]},"metadata":{},"sourceType":"module"}